C51 COMPILER V9.00   TEMP                                                                  12/16/2015 16:16:33 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN ..\HexCode\Temp.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE ..\Input\Temp.c PRINT(.\Temp.lst) OBJECT(..\HexCode\Temp.obj)

line level    source

   1          #include "Temp.h"
   2          #include "..\main\port.h"
   3          #include "..\main\ext_reg.h"
   4          #include <intrins.h>                         
   5          
   6          /*Define ADC operation const for ADC_CONTR*/
   7          #define ADC_POWER   0x80            //ADC power control bit
   8          #define ADC_FLAG    0x10            //ADC complete flag
   9          #define ADC_START   0x08            //ADC start control bit
  10          #define ADC_SPEEDLL 0x00            //420 clocks
  11          #define ADC_SPEEDL  0x20            //280 clocks
  12          #define ADC_SPEEDH  0x40            //140 clocks
  13          #define ADC_SPEEDHH 0x60            //70 clocks  
  14          
  15                                                                    
  16          uint code Temp[130]={
  17                              44, 47, 50, 53, 56, 59, 62, 65, 69, 72,      //-11~-20                      10
  18                              76, 80, 84, 89, 93, 98,102,112,118,123,   //-1~-10                  20
  19                     129,135,142,148,154,160,167,174,182,189,        //0~9                        30
  20                             196,204,212,220,228,236,244,253,262,270,    //10~19                  40
  21                             280,288,299,309,318,327,337,346,357,367,        //20~29                  50
  22                             377,393,398,408,419,429,439,450,460,470,        //30~39                      60
  23                             480,491,501,511,521,531,541,551,561,571,        //40~49                      70
  24                             581,591,600,609,619,627,637,645,654,663,        //50~59                      80
  25                             671,680,688,695,704,712,719,727,734,742,        //60~69                      90
  26                             748,756,762,769,775,781,788,793,799,805,        //70~79                      100
  27                             810,816,821,827,831,837,841,846,850,858,        //80~89                      110
  28                             861,866,869,873,877,881,885,888,895,896,    //90~99          120
  29                             899,899,901,902,904,905,906,907,908,910     //100~109
  30                             };
  31          
  32          uint code HTG_Temp[130]={
  33                             958,955,952,948,945,942,938,934,930,926,      //-20~-11                      10
  34                             922,918,913,909,904,899,894,889,884,879,   //-10~-1                  20
  35                     873,868,862,856,850,844,838,831,825,818,        //0~9                        30
  36                             811,804,797,790,783,776,768,761,753,745,    //10~19                  40
  37                             737,729,721,713,705,697,688,680,671,663,        //20~29                  50
  38                             654,646,637,628,620,612,602,593,585,575,        //30~39                      60
  39                             567,558,550,541,532,524,515,506,498,489,        //40~49                      70
  40                             481,472,464,456,448,440,432,424,416,408,        //50~59                      80
  41                             400,393,385,378,371,363,356,349,343,336,        //60~69                      90
  42                             329,323,316,310,304,298,291,286,281,274,        //70~79                      100
  43                             268,263,257,252,247,242,237,232,227,222,        //80~89                      110
  44                             218,213,209,204,200,196,191,187,183,180,    //90~99                  120
  45                             176,172,168,165,161,158,155,151,148,145     //100~109
  46                             };  
  47          
  48          uint code H_Temp[130]={
  49                      29, 30, 32, 33, 35, 37, 38, 40, 42, 44,        //0~9                        10
  50                              46, 48, 51, 53, 55, 58, 60, 63, 66, 69,    //10~19                  20
  51                              72, 75, 78, 81, 85, 88, 92, 95, 99,103,        //20~29                  30
  52                             107,111,115,120,124,129,134,139,143,149,        //30~39                      40
  53                             154,159,165,170,176,182,188,194,200,206,        //40~49                      50
  54                             213,219,226,233,239,246,253,260,268,275,        //50~59                      60
  55                             282,290,297,305,313,320,329,337,345,352,        //60~69                      70
C51 COMPILER V9.00   TEMP                                                                  12/16/2015 16:16:33 PAGE 2   

  56                             361,369,377,385,393,401,418,426,435,443,        //70~79                      80
  57                             451,460,468,476,484,493,501,509,517,525,        //80~89                      90
  58                             534,541,549,557,565,573,583,588,596,603,    //90~100                 100
  59                             611,618,626,633,640,647,654,661,668,674,        //100~109            110
  60                             681,688,693,701,707,713,719,725,730,737,    //110~119                120
  61                             742,748,753,759,763,770,775,780,785,790         //120~129
  62                             };
  63                             
  64          uint code THG_Humi[100] = {                                                       // 上拉4.7K 湿度 
  65                     190,200,210,225,231,236,242,247,253,259,               // 0 -- 10
  66                     265,270,276,281,287,292,297,303,308,313,               // 10 -- 19
  67                             319,324,330,335,340,346,351,356,362,367,               // 20 -- 29
  68                             373,378,383,389,394,399,405,410,415,421,               // 30 -- 39
  69                             426,432,437,442,448,453,458,464,469,475,               // 40 -- 49
  70                             480,485,491,496,501,507,512,518,523,528,               // 50 -- 59
  71                             534,539,544,550,555,561,566,571,577,582,               // 60 -- 69
  72                             587,593,598,604,609,614,620,625,630,636,               // 70 -- 79
  73                             641,646,652,657,663,668,673,679,684,689,               // 80 -- 89
  74                             695,700,706,711,716,722,727,733,738,744                // 90 -- 100  
  75                             };     
  76                                                                                                                                                                                              
  77                                          
  78          void Temp_Init()
  79          {       
  80   1              uchar i;                
  81   1              P1ASF = 0xff;                   // 1111 1110,            
  82   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  83   1              for(i=0;i<50;i++){ NOP(); }              
  84   1      }
  85           
  86          void Temp_Update()
  87          {
  88   1              uint AD_data;
  89   1      
  90   1              AD_data = 1024 - AD_Transform(0);                                        //室外温度
  91   1              Outdoor_Temperature = AD_Temp(AD_data,2)+ m_Param[4] - 148;
  92   1      
  93   1              AD_data = AD_Transform(1);
  94   1              Outdoor_Humidity =  AD_data/6.144 + m_Param[4] - 128;//室外湿度
  95   1      
  96   1              AD_data = AD_Transform(3);
  97   1              if(AD_data > 50)        {Supply_Pump =1;}
  98   1              else    {Supply_Pump =0;}
  99   1      
 100   1              AD_data = 1024 - AD_Transform(4);                                    //水箱温度
 101   1              Water_Temperature = AD_Temp(AD_data,2) + m_Param[2] - 148; 
 102   1      
 103   1              AD_data = AD_Transform(5) ;                                          //水位高度
 104   1              Tem_data[1] = AD_data/34 + m_Param[3] - 128;
 105   1      } 
 106          
 107          uint  AD_Transform(char ch)
 108          {
 109   1              uint i;
 110   1              uint tmp_Temp=0; 
 111   1              
 112   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START; 
 113   1              for(i=0;i<10;i++){NOP();} 
 114   1              // 启动A/D转换, 
 115   1              while (!(ADC_CONTR & ADC_FLAG));//Wait complete flag   等待完成标志
 116   1              ADC_CONTR &= ~ADC_FLAG;         //Close ADC
 117   1              
C51 COMPILER V9.00   TEMP                                                                  12/16/2015 16:16:33 PAGE 3   

 118   1              tmp_Temp = ADC_RES;                
 119   1              tmp_Temp = tmp_Temp<<2;
 120   1              tmp_Temp = tmp_Temp|(ADC_RESL&0x03);
 121   1              if (tmp_Temp<10){tmp_Temp=0;}
 122   1              
 123   1              return  tmp_Temp;
 124   1      }
 125                  
 126          uchar AD_Temp(uint m_data,uchar x)
 127          {
 128   1              uchar max=130 ,min = 1,mid;
 129   1              
 130   1              if(m_data<43)
 131   1              {
 132   2                      min=0xff;
 133   2                      return min;
 134   2              }
 135   1              
 136   1              while(min <= max)
 137   1              { 
 138   2                      mid = (max + min) / 2;
 139   2                      switch(x)
 140   2                      {
 141   3                              case  0:
 142   3                                      if(m_data > Temp[mid]){min = mid + 1;} 
 143   3                                      else { max = mid - 1;}
 144   3                              break;
 145   3                      
 146   3                              case  1:
 147   3                                      if(m_data > H_Temp[mid]){min = mid + 1;} 
 148   3                                      else { max = mid - 1;}
 149   3                                      if(min<8) {min=8;}
 150   3                              break;
 151   3                              
 152   3                              case  2:
 153   3                                      if(m_data > (1024-HTG_Temp[mid])){min = mid + 1;} 
 154   3                                      else { max = mid - 1;}
 155   3                              break;
 156   3                              
 157   3                              case  3:
 158   3                                      if(m_data > THG_Humi[mid]){min = mid + 1;} 
 159   3                                      else { max = mid - 1;}
 160   3                              break;                          
 161   3                      }       
 162   2              }       
 163   1              return min;     
 164   1      }
 165                                                                    


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    496    ----
   CONSTANT SIZE    =    980    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
